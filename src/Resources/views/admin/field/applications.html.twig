{% if field.value %}
    <style>
        .applications-list {
            width: 100%;
            padding: 0;
        }
        .applications-list .application-item {
            padding: 3px 0;
            border-bottom: 1px solid #eee;
        }
        .applications-list .app-icon {
            width: 20px;
            text-align: center;
            padding-left: 0;
            margin-right: 5px;
        }
        .applications-list .app-type {
            width: 100px;
            margin-right: 5px;
        }
        .applications-list .app-port {
            width: 70px;
            margin-right: 5px;
        }
        .applications-list .app-status {
            width: 60px;
        }
        .applications-list .app-action {
            width: 30px;
            padding-right: 0;
            margin-left: auto;
        }
        .applications-list .btn-sm {
            padding: 0.1rem 0.3rem;
            font-size: 0.7rem;
        }
    </style>
    <div class="applications-list">
        {% for application in field.value %}
            <div class="application-item d-flex align-items-center">
                <div class="app-icon">
                    <i class="fas fa-cube text-secondary"></i>
                </div>
                <div class="app-type">
                    <strong>{{ application.type }}</strong>
                </div>
                <div class="app-port text-muted small">
                    端口: {{ application.port }}
                </div>
                <div class="app-status">
                    <span class="badge bg-{{ application.online ? 'success' : 'warning' }}">
                        {{ application.online ? 'ONLINE' : 'OFFLINE' }}
                    </span>
                </div>
                <div class="app-action">
                    <button type="button" 
                            class="btn btn-sm btn-outline-primary deploy-app" 
                            data-node="{{ entity.instance.id }}" 
                            data-app="{{ application.id }}"
                            title="部署应用">
                        <i class="fas fa-rocket"></i>
                    </button>
                </div>
            </div>
        {% endfor %}
    </div>

    <script>
    (function() {
        // 确保事件只绑定一次
        const deployButtons = document.querySelectorAll('.deploy-app');

        // 先移除所有已存在的事件处理器
        deployButtons.forEach(button => {
            const clonedButton = button.cloneNode(true);
            button.parentNode.replaceChild(clonedButton, button);
        });

        // 重新获取所有按钮并添加事件处理
        document.querySelectorAll('.deploy-app').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                const nodeId = this.dataset.node;
                const appId = this.dataset.app;

                if (confirm('确定要部署此应用吗？')) {
                    fetch(`/admin/node/${nodeId}/deploy-application/${appId}`, {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            // 显示成功消息
                            const event = new CustomEvent('ea.notification.show', {
                                detail: {
                                    type: 'success',
                                    message: '应用部署任务已提交'
                                }
                            });
                            document.dispatchEvent(event);
                        }
                    })
                    .catch(error => {
                        // 显示错误消息
                        const event = new CustomEvent('ea.notification.show', {
                            detail: {
                                type: 'danger',
                                message: '部署失败: ' + error.message
                            }
                        });
                        document.dispatchEvent(event);
                    });
                }
            });
        });
    })();
    </script>
{% endif %}
