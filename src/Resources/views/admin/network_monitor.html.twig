{% extends '@EasyAdmin/page/content.html.twig' %}

{% block page_title %}
    {{ node.name }} - 网络监控
{% endblock %}

{% block content_title %}
    <div class="d-flex justify-content-between">
        <div>
            <h1>{{ node.name }} - 网络监控</h1>
        </div>
        <div>
            <a href="{{ referer }}" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> 返回
            </a>
        </div>
    </div>
{% endblock %}

{% block main %}
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">最近24小时流量</h5>
                </div>
                <div class="card-body">
                    <canvas id="trafficChart24h" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">最近7天流量</h5>
                </div>
                <div class="card-body">
                    <canvas id="trafficChart7d" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script>
        // 格式化字节大小为更易读的单位
        function formatBytes(bytes, decimals = 2) {
            if (bytes === 0) return '0 Bytes';
            
            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }

        // 24小时数据
        const labels24h = {{ labels24h|json_encode|raw }};
        const rxData24h = {{ rxData24h|json_encode|raw }};
        const txData24h = {{ txData24h|json_encode|raw }};

        // 7天数据
        const labels7d = {{ labels7d|json_encode|raw }};
        const rxData7d = {{ rxData7d|json_encode|raw }};
        const txData7d = {{ txData7d|json_encode|raw }};

        // 创建24小时图表
        const ctx24h = document.getElementById('trafficChart24h').getContext('2d');
        const trafficChart24h = new Chart(ctx24h, {
            type: 'line',
            data: {
                labels: labels24h,
                datasets: [
                    {
                        label: '接收流量(RX)',
                        data: rxData24h,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 2,
                        tension: 0.1
                    },
                    {
                        label: '发送流量(TX)',
                        data: txData24h,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderWidth: 2,
                        tension: 0.1
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return formatBytes(value);
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                label += formatBytes(context.raw);
                                return label;
                            }
                        }
                    }
                }
            }
        });

        // 创建7天图表
        const ctx7d = document.getElementById('trafficChart7d').getContext('2d');
        const trafficChart7d = new Chart(ctx7d, {
            type: 'line',
            data: {
                labels: labels7d,
                datasets: [
                    {
                        label: '接收流量(RX)',
                        data: rxData7d,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderWidth: 2,
                        tension: 0.1
                    },
                    {
                        label: '发送流量(TX)',
                        data: txData7d,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderWidth: 2,
                        tension: 0.1
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return formatBytes(value);
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                let label = context.dataset.label || '';
                                if (label) {
                                    label += ': ';
                                }
                                label += formatBytes(context.raw);
                                return label;
                            }
                        }
                    }
                }
            }
        });
    </script>
{% endblock %}
